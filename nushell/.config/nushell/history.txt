exit
config nu
$env.config.buffer_editor = "cursor"
clear
config nu
ls
rm -rf nushell/.config/nushell/config.nu
clear
config nu
config env
config nu
clear
ls
clar
clear
config env
clear
ls
node -v
p -v
fzf
clear
cd ..
ls
cd ~/workspace/
ls
cd enimas/
ls
cd go-app/
zoxide
which zoxide
which z
clear
which z
which zoxide
which z
z
z 
z eni
clear
z eni
z en
fd
source ~/.profile
fd
clear
z eni
ls
clear
git init
rm -rf .git
clear
z eni
ls
cd go-app
clear
z go
z
z go-app
clear
ls
pwd
clear
ls
clear
c
z go-app
ls
clear
z
z go/
z go-app
clear
fzf
lazydocker 
clear
ls
s
c
s
c
sudo apt install btop
free -h --giga
c
p run dev
git add -A
git branch
git config user.email
rm -rf .git
git init
c
git add -A
git commit -m "Initial commit"
git config user.email "kianhooi.hiew@partner.cr-l.jp"
git config user.name "kianhooi.hiew"
git commit -m "Initial commit"
clear
git commit -m "Initial commit"
clear
p run build
open
^open
clear
ls
p run preview
tldr gcloud
clear
p add i18next react-i18next
clear
p dev
p add -D vite-plugin-svgr
c
p dev
c
p dev
rm -rf .git
c
git init
git add -A
git config user.email "kianhooi.hiew@partner.cr-l.jp"
git config user.name "kianhooi.hiew"
c
git add -A
git commit -m "Initial commit"
c
p build
cl
c
ls
cd ..
ls
mv client-web-app/ client-web
c
ls
ls -la
chmod client-web 777
chmod777 client-web/
chmod 777 client-web/
c
ls -la
c
cd client-web/
cursor .
rm -rf .git
c
clear
stow starship/
c
rm -rf ~/.config/starship/presets
c
ls -la
c
git init
c
git add -A
git commit -m "Initial commit"
git config user.email "kianhooi.hiew@partner.cr-l.jp"
git config user.name "kianhooi.hiew"
git commit -m "Initial commit"
c
c
git log
clear
git init
git config user.name "kianhooi.hiew"
git config user.email "kianhooi.hiew@partner.cr-l.jp"
c
git add -A
git commit -m "Initial commit"
c
rm  -rf .git
c
git init
c
git config user.email "kianhooi.hiew@partner.cr-l.jp"
git config user.name "kianhooi.hiew"
git add -A
git commit -m "Initial commit"
c
cd seeder-js/
ls
c
node src/seed-anomaly.ts
bun
c
curl -fsSL https://bun.sh/install | bash<\n><\n>
c
which bun
bun
which bun
c
bun ./src/seed-anomaly.ts
c
bun ./src/seed-anomaly.ts
c
open out/seed-anomaly-docs.csv
c
bun ./src/seed-anomaly.ts
c
ls
cd ..
ls
mkdir anomaly-detection
cd anomaly-detection/
ls
mv ../infra/seeder-js/ ./
c
ls
cp ../infra/schema/ ./
cp -r ../infra/schema/ ./
c
ls
cursor .
p dev
touch Dockerfile
cursor Dockerfile
c
docker compose up
clear
gcloud auth
gcloud
which gcloud
clear
sudo apt-get update<\n>
gcloud 
sudo apt-get install apt-transport-https ca-certificates gnupg curl
clear
fastfetc
sudo apt install fastfetch
lsb_release
bat
bbat /etc/os-release
bat /etc/os-release
wget https://github.com/fastfetch-cli/fastfetch/releases/download/2.42.0/fastfetch-linux-amd64.deb
c
ls
pkg -i fastfetch-linux-amd64.deb
which pkg
sudo apt install ./fastfetch-linux-amd64.deb
ls -la
ls -la fastfetch-linux-amd64.deb
chmod 777 fastfetch-linux-amd64.deb
sudo apt install ./fastfetch-linux-amd64.deb
which fastfetch 
c
fastfetch 
rm -rf ./fastfetch-linux-amd64.deb
clear
rm -rf *fireb
c
rm -rf *firebase
rm -rf ./firebase.json firebase.json
c
rm -rf .firebaserc
c
cd ~
z
c
gcloud
ls -la /bin
ls -la /bin | fzf
apt-get
c
curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
c
c
sudo apt-get update && sudo apt-get install google-cloud-cli
sudo apt-get update; sudo apt-get install google-cloud-cli
curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
sudo apt-get update; sudo apt-get install google-cloud-cli
echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
c
sudo apt-get update; sudo apt-get install google-cloud-cli
c
gcloud
gcloud auth
gcloud auth list
c
cc
c
gcloud -v
c
docker images
docker build
docker build .
docker images
lazydocker
c
make test_make
c
make push
ls /home/hiew/.gcp/enimas-test-infra-3a285a6861b1.json
make push
c
make push
lazydocker 
make push
c
lazydocker 
c
echo ðŸš€
make test_echo
make build
c
mkdir terraform
cd terraform/
terraform iit
terraform init
tldr-hs 
tldr terraform
cd ..
terraform init
cd terraform/
c
tldr terraform
terraform init
touch main.tf
terraform init
c
git log
rm -rf .git
terraform plan
terraform init
terraform plan
tldr terraform
terraform fmt
c
terraform plan
terraform output
terraform console
c
terraform show
terraform plan
clear
terraform apply --help
terraform apply -target google_artifact_registry_repository.admin_web
terraform show
c
terraform plan
c
terraform plan
c
terraform plan
terraform show
c
make push
cd ..
make push
clear
c
make validate_env
c
make validate_env
clear
make push
cd terraform/
terraform plan
terraform apply
clear
cd ..
make push
cd terraform/
terraform apply
clear
make push
ls
cd ..
make push
docker compose up --force-recreate 
docker compose up --build --force-recreate 
docker compose up
docker compose up --force-recreate 
docker compose up --build --force-recreate 
make push
clear
cd terraform/
terraform plan
terraform apply
c
terraform state rm google_cloud_run_v2_service.admin_web
c
terraform app
terraform apply
terraform show
c
make push
cd ..
make push
make deploy
clear
p dev
p push
docker compose up --build --force-recreate 
clear
make push
make deploy
git log
clear
rm -rf .git
clear
git init
git config user.name "kianhooi.hiew"
git config user.email "kianhooi.hiew@partner.cr-l.jp"
git commit -m "Initial commit"
git add -A
git commit -m "Initial commit"
clear
p build
c
mkdir terraform
clear
docker compose up --build --force-recreate 
make build
c
clear
ls
c
make build
ls
pwd
c
cd terraform/
touch main.tf
touch terraform.tfvars
clear
terraform init
clear
terraform apply -target google_artifact_registry_repository.client_web
cd terraform/
terraform show
c
cd ..
make push
c
cd terraform/
terraform apply
clear
rm -rf .git
git init
git config user.email "kianhooi.hiew@partner.cr-l.jp"
git config user.name "kianhooi.hiew"
git add -A
git commit -m "Initial commit"
git log
rm -rf .git
git init
clear
git config user.name "kianhooi.hiew";
git config user.email "kianhooi.hiew@partner.cr-l.jp"
git add -A
c
git add -A
ls
pwd
clear
git add -A
cd terraform/
rm -rf .git
clear
cd ..
clear
rm -rf .git
clear
git init
git add -A
clear
git commit -m "Initial commit"
git config user.email "kianhooi.hiew@partner.cr-l.jp"
git config user.name "kianhooi.hiew";
git commit -m "Initial commit"
clear
git remote -v
c
c
p add framer-motion
p dev
git reset --hard
clear
git df
tldr git
tldr-hs  git
git clean -fd
c
p dev
clear
git add -A
git commit -m "Fix logout and added splash loader"
c
make push
make deploy
c
docker compose up --build --force-recreate 
docker compose up --build --force-recreate c
c
docker compose up --build --force-recreate c
docker compose up --build --force-recreate
c
make push; make deploy
c
git add -A
git commit -m "Fix logout auth"
c
ls
cd seeder-js/
bun ./src/seed-anomaly.ts
c
bun ./src/seed-anomaly.ts
c
bun ./src/seed-anomaly.ts
make run-admin
mkdir -p terraform
mkdir terraform
cd terraform/
cursor main.tf
cd ..
clear
ls
cd terraform/
terraform init
clear
terraform plan
c
terraform import google_bigquery_dataset.main_dataset
terraform import \<\n>  google_bigquery_dataset.my_dataset \<\n>  enimas-test-infra:main_dataset  :contentReference[oaicite:0]{index=0}
terraform import google_bigquery_dataset.my_dataset enimas-test-infra:main_dataset :contentReference[oaicite:0]{index=0}
terraform import \<\n>  google_bigquery_dataset.my_dataset \<\n>  MY_PROJECT_ID:EXISTING_DATASET  :contentReference[oaicite:0]{index=0}
terraform import google_bigquery_dataset.my_dataset enimas-test-infra:main_dataset
terraform import google_bigquery_dataset.main_dataset enimas-test-infra:main_dataset
c
terraform import google_bigquery_dataset.main_dataset enimas-test-infra:main_dataset
terraform import google_bigquery_dataset.main_dataset projects/enimas-test-infra/datasets/main_dataset
terraform import google_bigquery_table.devices projects/enimas-test-infra/datasets/main_dataset/tables/devices
terraform import google_bigquery_table.devices_data projects/enimas-test-infra/datasets/main_dataset/tables/devices_data
terraform import google_bigquery_table.channels_data projects/enimas-test-infra/datasets/main_dataset/tables/channels_data
terraform import google_bigquery_table.date projects/enimas-test-infra/datasets/main_dataset/tables/date
c
terraform plan
clear
terraform plan
terraform apply
terraform reset
c
terraform import google_bigquery_dataset.main_dataset projects/enimas-test-infra/datasets/main_dataset
terraform refresh
c
terraform apply
c
cd ..
c
make seed-anomaly
c
ls
rm -rf ml_anomaly_detection/
c
make seed-anomaly
c
make seed-anomaly
c
git add -A
rm -rf .git
clear
git init
ls -la
c
git add -A
git commit -m "Initial commit"
git config user.name "kianhooi.hiew";
git config user.email "kianhooi.hiew@partner.cr-l.jp"
c
git add -A
git commit -m "Initial commit"
c
mkdir vertex_anomaly_model
c
cd vertex_anomaly_model
venv -m venv
pvenv -m venv
py -m venv
py -m venv venv
c
ls
mkdir trainer
c
pip install panda tensorflow scikit-learn
source venv/bin/activate
c
pip install panda tensorflow scikit-learn
c
pip show
pip show panda
c
python trainer/task.py \<\n>       --data_gcs_path './sample_data/' \<\n>       --epochs 2 \<\n>       --batch_size 32 \<\n>       --embedding_dim 16 \<\n>       --validation_split 0.1
zsh
cd vertex_anomaly_model
py test.py
py focus_current_value.py --test_file=complete_test.csv --current_value_threshold=0.001 --plot
pip install pandas
source venv/bin/activate
source ./venv/bin/activate
ls
source ./venv/bin/activate
rm -rf model_output/
c
docker compose down mysql
c
cursor enimas.sql
sql2dbml enimas.sql --postgres
sql2dbml enimas.sql --postgres -o enimas.dbml
c
bun test.ts
cd enimas-db/
c
bun test.ts
c
bun test.ts
c
bun test.ts
c
bun test.ts
c
bun test.ts
c
bun test.ts
c
ls
cd ..
ls
cd ..
ls
mv anomaly-detection/ enimas-test
c
ls
mv infra enimas-infra
ls
c
ls
mv go-app enimas-be
c
ls
mv client-web/ enimas-client-web
mv admin-web/ enimas-admin-web
c
ls
z enimas-test/
c
cursor .
git add -A; git commit -m "upadte"
c
cd device_benchmark/
c
ls
pip install -r src/requirements.txt
source-env venv/bin/activate
cd ..
cd seeder-js/
bun src/seed-devices.ts
bun src/seed-devices.tsc
bun src/seed-devices.ts
cd seeder-js/
bun src/seed-devices.ts
c
bun src/seed-devices.ts
c
cd ..
cd device_benchmark/
c
python src/main.py benchmark
cd ..
cd seeder-js/
bun src/seed-devices.ts
c
cd seeder-js/
ls
bun src/seed-devices.ts
cd ..
cd terraform/
terraform apply
cd ..
cd seeder-js/
bun src/seed-devices.ts
cd ..
c
cd device_benchmark/
python src/main.py benchmark
python src/main.py
py -m venv venv
pip install -r ./requirements.txt
c
ls
rm -rf .git
c
cd device_banchmark_2/
python main.py
clear
cd device_banchmark_2/
cursor .
py generate_data.py
pip install -r ./requirements.txt
c
py generate_data.py
py main.py normalize
make generate_data
c
make normalize
make generate_data
make normalize
c
pip install mecab-python3
overlay use venv/bin/activate
overlay use venv/bin/activate.nu
virtualenv ansible<\n>
pip install virtualenv<\n>
py -m venv venv
c
overlay use venv/bin/activate.nu
c
python normalize.py "tv" --type category
python normalize.py "ã‚³ãƒ³ãƒ—ãƒ¬ãƒƒã‚µãƒ¼" --type category
python normalize.py "ã‚³ãƒ³ãƒ—ãƒ¬ãƒƒã‚µ" --type category
c
python normalize.py "ã‚³ãƒ³ãƒ—ãƒ¬ãƒƒã‚µ" --type category
py normalize.py aircont compressor
py normalize.py "aircont compressor"
py normalize.py "aircond compressor"
c
make generate_data
py device_visualization.py
c
py device_visualization.py
c
py device_visualization.py
py device_benchmark.py
c
py device_visualization.py
c
py device_visualization.py
py device_data_visualization.py
c
py device_data_generator
py device_data_generator.py
make generate_data
make device_data_visualization
make generate_data
make visualize_data
c
make benchmark
git add -A
git commit -m update
c
git config user.email "kianhooi.hiew@partner.cr-l.jp"
git config user.name "kianhooi.hiew";
git commit -m update
c
make benchmark
c
make benchmark
c
make benchmark
c
make benchmark
c
make benchmark
c
make benchmark
c
make benchmark
c
cd seeder-js/
c
bun src/seed-devices.ts
bun src/seed-anomaly.ts
py run_metrics_benchmark.py
pip install db-dtypes
py run_metrics_benchmark.py
c
py run_metrics_benchmark.py
c
py pricing_cal.py
py run_metrics_benchmark.py
py pricing_cal.py
rm -rf .git
c
rm -rf .git
c
cd ..
mkdir enimas-info
cd enimas-info
cursor .
git init
clear
git remote add origin git@bitbucket.org:cr-l/epro-system-development.git
clear
git checkout -b feature-specs
clear
git fetch -a
git add -A
git commit -m "Initial commit"
git config user.name "kianhooi.hiew";
git config user.email "kianhooi.hiew@partner.cr-l.jp"
git commit -m "Initial commit"
git push origin feature-specs
git add -A
git commit -m "Added current system db schema"
git push origin feature-specs
c
git add -A
git commit -m "Added new enimas db design"
git push origin feature-specs
clear
git add -A
git commit -m "Added new enimas db design pdf"
git push origin feature-specs
clear
ls
cd ..
ls
mkdir firebase-api
cd firebase-api/
cursor .
which npm
which p
p install -g firebase-tools
firebase init
firebase login
firebase init
clear
firebase deploy
py python3.13 -m venv venv
py -m venv venv
clear
firebase deploy
py install
firebase serve --only functions
py --version
clear
firebase init
clear
firebase init
firebase serve --only functions
clear
py --version
venv
pvenv
cd ..
py --version
which python3
which pyenv
which venv
pyenv
which pyenv
clear
config
config nu
curl -fsSL https://pyenv.run | bash<\n>
py --version
which python3
sudo apt remove python3
clear
which python3
pyenv
pyenv list
pyenv version
pyenv install --list
pyenv install 3.11
clear
py --version
which python3
clear
pyenv virtualenv
pyenv virtualenv 3.12 .
puenv install --list
pyenv install --list
pyenv virtualenv 3.12 .
pyenv list
pyenv
pyenv shims
pyenv virtualenv 3.11 .
pyenv virtualenv 3.11
clear
firebase serve --only functions
pyenv install 3.13
pyenv virtualenv 3.13 venv
firebase serve --only functions
py --version
rm -rf venv
pyenv virtualenv 3.13 venv
pyenv virtualenv 3.13 ./venv
pyenv virtualenv 3.13 venv
pyenv local 3.13
clear
firebase serve --only functions
ls -la
sudo apt-get install libreadline-dev
sudo apt autoremove
clear
py --version
pyenv local 3.13.3
py -m venv venv
firebase serve --only functions
clear
cd ..
mkdir firebase-api-v2
cursor ./firebase-api-v2/
firebase init
cd functions/
python3 -m venv venv
py -m venv venv
pyenv local 3.13
python3 -m venv venv
python3 install -r requirements.txt
python3 -r install requirements.txt
python -r install requirements.txt
pip install -r requirements.txt
cd..
cd ..
clear
firebase serve --only functions
cd functions/
source ./venv/bin/activate
make generate
make generate 2022
make generate year=20222
make generate year=2024
make generate year=2025
clear
git remote -v
git init
git remote add origin git@bitbucket.org:cr-l/epro-system-development.git
git config user.email "kianhooi.hiew@partner.cr-l.jp"
git config user.name "kianhooi.hiew";
clear
git checkout -b demo-firebase-functions
git add -A
clear
clear
git add -A
git commit -m "initial commit"
git push origin demo-firebase-functions
c
git add -A
git commit -m "added features details docs"
git push origin feature-specs
clear
git branch -a
git fetch -a
clear
make generate year=2026
git fecth -a
git push origin demo-firebase-functions
clear
git status
c
cd ..
ls
cd enimas-client-web/
cursor .
git init
git config user.name "kianhooi.hiew";
git config user.email "kianhooi.hiew@partner.cr-l.jp"
clear
git add -A
git commit -m "Initial commit"
git add -A
git commit -m "Initial commit"
git status
git remote -v
clear
git logs
git log
clear
git remote add origin git clone git@bitbucket.org:cr-l/enimas-client-web.git
git remote add origin git@bitbucket.org:cr-l/enimas-client-web.git
git push origin main
clear
git add -A
git commit -m "Added README.md"
git push origin main
clear
c
dc ..\
cd ..
ls
cd enimas-admin-web/
cursor .
git init
git log
rm -rf .git
git init
git add -A
git config user.email "kianhooi.hiew@partner.cr-l.jp"
git config user.name "kianhooi.hiew";
c
git add -A
git commit -m "Initial commit"
c
git add -A
git commit -m "Added README.md"
git remote add origin git@bitbucket.org:cr-l/enimas-admin-web.git
git push origin main
git add -A
git commit -m "Update README"
git push origin main
git add -A
git commit -m "Update README"
c
git push origin main
clear
cd ..
ls
mv enimas-be enimas-backend
ls
cd enimas-backend
cursor .
c
clear
git log
rm -rf .git
git init
rm -rf .mysql-data/
lazydocker
docker compose down mysql
lazydocker
clear
cd internal/util/
rm -rf .github/
cd ..
clear
lazydocker
docker stats
docker compose down
lazydocker
c
z docker
z ~/dev/docker-compose.yml
cat ~/dev/docker-compose.yml
lazydocker
c
rm -rf .mysql-data/
sudo rm -rf .mysql-data/
c
c
go format
go
go fmt
go fmt ./apps
tldr go
clear
git log
git add -A
git commit -m "Initial commit"
git config user.name "kianhooi.hiew";
git config user.email "kianhooi.hiew@partner.cr-l.jp"
c
git commit -m "Initial commit"
c
cd terraform/
terraform init
cd ..
cd enimas-infra/
cursor .
git reset --hard
git clean -fd
c
git log
clear
git add -A
git commit -m "remove looker studio infra"
c
rm -rf notes schema seeder-js/
c
git add -A\
git add -A
git commit -m "removed test files"
clear
mkdir -p environments/client-api
mkdir -r environments/client-api
c
git remote -v
git log
git remote add origin git@bitbucket.org:cr-l/enimas-backend.git
git push origin main
go version
c
cd environments/
cd dev
terraform init
terraform validate
c
terraform validate
c
terraform validate
terraform init
terraform validate
c
git log
rm -rf .git
c
git init
clear
rm -rf .git
git init
git config user.email "kianhooi.hiew@partner.cr-l.jp"
git config user.name "kianhooi.hiew";
c
git add -A
git commit -m "Initial commit"
c
ls
rm -rf .git
cd ..
clear
cd ..
ls
c
rm -rf .git
git init
git add -A
git config user.name "kianhooi.hiew";
git config user.email "kianhooi.hiew@partner.cr-l.jp"
c
git add -A
git commit -m "Initial commit"
c
git add -A
git commit -m "Initial commit"
clear
git log
git remote -v
rm -rf .git
git init
git add -A
git config user.email "kianhooi.hiew@partner.cr-l.jp"
git config user.name "kianhooi.hiew";
git add -A
git commit -m "Initial commit"
c
git remote add origin git@bitbucket.org:cr-l/enimas-infra.git
c
git push origin main
git push origin main --froce
git push origin main -f
go --version
go version
which go
c
tldr go
go get
cd apps/admin-api/
go get
clear
c
cd ..
clear
make create_migration
clear
make migrateup
which migrate
c
make migrateup
make migratedown
make migrateup
c
make run-admin
c
make run-admin
make swag-admin
c
make swag-admin
swag init -g apps/admin-api/main.go -o apps/admin-api/docs
which swag
clear
which brew
go get -u github.com/swaggo/swag/cmd/swag<\n>
which swag
c
swag
exit
zsh
c
go install github.com/swaggo/swag/cmd/swag@latest<\n>
which swag
c
go run github.com/swaggo/swag/cmd/swag init<\n>
c
go run github.com/swaggo/swag/cmd/swag init<\n>
make swag-admin
make run-admin
make swag-admin
c
make run-admin
make swag-admin
make run-admin
make swag-admin
make run-admin
make swag-admin
make run-admin
make swag-admin
make run-admin
make swag-admin
go get github.com/go-playground/validator/v10<\n>
c
go remove github.com/go-playground/validator/v10<\n>
go help
make run-admin
go mod
go mod tidy
c
git add -A
git commit -m "Added postgres integration"
git push origin main
c
go get -u go.uber.org/zap<\n><\n>
make run-admin
go get -u github.com/golang-jwt/jwt/v5<\n>
c
make swag-admin
make run-admin
make swag-admin
get mod tidy
go mod tidy
make swag-admin
go get
cd apps/admin-api/
go get
make swag-admin
cd ..
make swag-admin
go get
go mod tidy
c
make swag-admin
c
make swag-admin
c
make swag-admin
make run-admin
make swag-admin
make run-admin
c
make swag-admin; make run-admin
c
make run-admin
make swag-admin
make run-admin
make swag-admin
make run-client
make run-admin
c
make run-admin
c
make run-admin
go install github.com/air-verse/air@latest
which air
air -c .air.toml<\n>
ls ~/.air
cd ~
which go
go install github.com/air-verse/air@latest
go version
go upgrade
rm -rf /usr/local/go && tar -C /usr/local -xzf go1.24.3.linux-amd64.tar.gz<\n>
which go
sudo snap install --classic go<\n>
snap help refresh
go versio
go version
sudo snap install --classic go<\n>
tldr
tldr snap
snap remove go
sudo snap remove go
sudo snap install --classic go<\n>
which go
go
ls ls ~/go
ls ~/go
ls /usr/bin | fzf
go version
which go
go version
ls ~/go/bin/
go/bin/
bat ~/.profile 
which go
go version
ls /snap/bin
which air
air
ls ~/.air
cd ~
go install github.com/air-verse/air@latest<\n>
which go
og
go
go version
which pnpm,
which pnpm
config nu
which go
go version
cd ~
go list
go install github.com/air-verse/air@latest<\n>
which air
ls ~/go/bin/
which air
air
which air
nu config
config n
config nu
which air
c
git remote -v
git log
c
rm -rf .git
git init
clear
git add -A
git config user.name "desmondhiew"
git config user.email "desmond.hiew88@gmail.com"
git remote add origin git@github.com:desmondhiew00/dotfiles.git
git checkout -b ubuntu
c
